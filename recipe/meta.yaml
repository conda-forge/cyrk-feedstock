{% set name = "CyRK" %}
{% set version = "0.13.4" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/cyrk-{{ version }}.tar.gz
  sha256: 0b1093418f0f1c6da0bfb7a0da0eab5b485c506da04860406c46b865b930bdf9

build:
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0
  skip: true  # [py<39]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}
    - numpy
    # - numpy <2.0  # [py<313]
    # - numpy >=2.0  # [py>=313]
  host:
    - python
    - setuptools
    - numpy
    # - numpy <2.0  # [py<313]
    # - numpy >=2.0  # [py>=313]
    - cython
    - wheel
    - pip
  run:
    - python
    - numpy
    - cython
    - scipy
    - numba

# Explicitly include pyx and pxd files in the package data
package_data:
  {{ name|lower }}:
    - "CyRK/**/*.pyx"
    - "CyRK/**/*.pxd"
    - "CyRK/array/interp_common.c"
    - "CyRK/cy/common.cpp"
    - "CyRK/cy/common.hpp"
    - "CyRK/cy/cysolver.cpp"
    - "CyRK/cy/cysolver.hpp"
    - "CyRK/cy/rk.cpp"
    - "CyRK/cy/rk.hpp"
    - "CyRK/cy/cysolve.cpp"
    - "CyRK/cy/cysolve.hpp"
    - "CyRK/cy/cy_array.cpp"
    - "CyRK/cy/cy_array.hpp"
    - "CyRK/cy/dense.cpp"
    - "CyRK/cy/dense.hpp"
    - "CyRK/cy/cysolution.cpp"
    - "CyRK/cy/cysolution.hpp"

test:
  imports:
    - CyRK
  commands:
    - pip check
    - python -c "import CyRK; CyRK.test_nbrk(); CyRK.test_cysolver(); CyRK.test_pysolver()"
  requires:
    - pip

about:
  home: https://github.com/jrenaud90/CyRK
  summary: Runge-Kutta ODE Integrator Implemented in Cython and Numba.
  description: |
    CyRK provides fast integration tools to solve systems of ODEs using an adaptive time stepping scheme.
    CyRK can accept differential equations that are written in pure Python, njited numba, or cython-based cdef
    functions. These kinds of functions are generally easier to implement than pure c functions and can be used in
    existing Python software. Using CyRK can speed up development time while avoiding the slow performance that comes
    with using pure Python-based solvers like SciPy's `solve_ivp`.
  license: CC-BY-SA-4.0
  license_file: LICENSE.md
  doc_url: https://github.com/jrenaud90/CyRK/tree/main/Documentation
  dev_url: https://github.com/jrenaud90/CyRK

extra:
  recipe-maintainers:
    - jrenaud90
