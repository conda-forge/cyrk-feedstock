{% set name = "CyRK" %}
{% set version = "0.13.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/cyrk-{{ version }}.tar.gz
  sha256: 3d58d28472b86f7cb2cac1f19fd9c7565687dafb8d87185218c4318dc4463c35

build:
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0
  skip: true  # [py<39]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}
    - numpy
    # - numpy <2.0  # [py<313]
    # - numpy >=2.0  # [py>=313]
  host:
    - python
    - setuptools
    - numpy
    # - numpy <2.0  # [py<313]
    # - numpy >=2.0  # [py>=313]
    - cython
    - wheel
    - pip
  run:
    - python
    - numpy
    - cython
    - scipy
    - numba

test:
  imports:
    - CyRK
  commands:
    - pip check
    - python -c "import CyRK; CyRK.test_nbrk(); CyRK.test_cysolver(); CyRK.test_pysolver()"
  requires:
    - pip

about:
  home: https://github.com/jrenaud90/CyRK
  summary: Runge-Kutta ODE Integrator Implemented in Cython and Numba.
  description: |
    CyRK provides fast integration tools to solve systems of ODEs using an adaptive time stepping scheme.
    CyRK can accept differential equations that are written in pure Python, njited numba, or cython-based cdef
    functions. These kinds of functions are generally easier to implement than pure c functions and can be used in
    existing Python software. Using CyRK can speed up development time while avoiding the slow performance that comes
    with using pure Python-based solvers like SciPy's `solve_ivp`.
  license: CC-BY-SA-4.0
  license_file: LICENSE.md
  doc_url: https://github.com/jrenaud90/CyRK/tree/main/Documentation
  dev_url: https://github.com/jrenaud90/CyRK

extra:
  recipe-maintainers:
    - jrenaud90
